{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service called ApiService that provides methods for interacting with a backend REST API. It includes methods for session management, message handling, health checks, and error processing, all utilizing HTTP requests and observables.", "external_files": ["../models", "../../environments/environment", "@angular/core", "@angular/common/http", "rxjs"], "external_methods": ["HttpClient.get", "HttpClient.post", "HttpClient.delete", "HttpParams.set", "Observable.pipe", "catchError", "map", "throwError", "timeout"], "published": ["ApiService"], "classes": [{"name": "ApiService", "description": "A service class that provides methods for making API calls to the backend, including session management, message handling, health checks, and error processing."}], "methods": [{"name": "health", "description": "Performs a health check request to the backend API."}, {"name": "createSession", "description": "Creates a new session with the backend API."}, {"name": "listSessions", "description": "Retrieves a list of sessions with optional pagination."}, {"name": "getSession", "description": "Retrieves details of a specific session by session ID."}, {"name": "deleteSession", "description": "Deletes a session identified by session ID."}, {"name": "listMessages", "description": "Lists messages associated with a session."}, {"name": "sendMessage", "description": "Sends a message payload to the backend API."}, {"name": "handleError", "description": "Handles and formats errors from HTTP requests."}], "calls": ["HttpClient.get", "HttpClient.post", "HttpClient.delete", "HttpParams.set", "Observable.pipe", "catchError", "timeout", "throwError"], "search-terms": ["Angular ApiService", "session management", "message API", "HTTP client", "backend interaction", "error handling"], "state": 2, "file_id": 23, "knowledge_revision": 88, "git_revision": "", "revision_history": [{"47": ""}, {"88": ""}], "ctags": [{"_type": "tag", "name": "ApiService", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/api.service.ts", "pattern": "/^export class ApiService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/api.service.ts", "pattern": "/^  private http = inject(HttpClient);$/", "language": "TypeScript", "kind": "property", "scope": "ApiService", "scopeKind": "class"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/api.service.ts", "pattern": "/^    let message = 'An unexpected error occurred.';$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "p", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/api.service.ts", "pattern": "/^    const p = path.startsWith('\\/') ? path : `\\/${path}`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "params", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/api.service.ts", "pattern": "/^    const params = new HttpParams().set('session_id', sessionId);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "params", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/api.service.ts", "pattern": "/^    const params = new HttpParams().set('skip', skip).set('limit', limit);$/", "language": "TypeScript", "kind": "constant"}], "hash": "f999d29984ca5912bbc5b2a26ca947bc", "format-version": 4, "code-base-name": "q_a_frontend", "filename": "q_a_frontend/src/app/services/api.service.ts", "fields": [{"name": "private http = inject(HttpClient);", "scope": "ApiService", "scopeKind": "class", "description": "unavailable"}, {"name": "let message = 'An unexpected error occurred.';", "scope": "", "scopeKind": "", "description": "unavailable"}]}