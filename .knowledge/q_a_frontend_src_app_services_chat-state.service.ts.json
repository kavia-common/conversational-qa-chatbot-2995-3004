{"is_source_file": true, "format": "TypeScript", "description": "This file defines the ChatStateService class in Angular, which manages application state related to chat sessions and messages. It handles interactions with an API service for listing, creating, deleting sessions and sending messages, using signals for reactive UI updates.", "external_files": ["./api.service", "../models"], "external_methods": ["ApiService.listSessions", "ApiService.createSession", "ApiService.deleteSession", "ApiService.listMessages", "ApiService.sendMessage"], "published": ["ChatStateService"], "classes": [{"name": "ChatStateService", "description": "Service managing chat sessions and messages, providing signals for reactive components, and orchestrating API calls for chat functionalities."}], "methods": [{"name": "init", "description": "Initializes the service by refreshing the list of sessions."}, {"name": "refreshSessions", "description": "Loads the list of chat sessions from the API, sets the active session, or creates a new one if none exist."}, {"name": "createSession", "description": "Creates a new chat session via the API and updates the local session list."}, {"name": "deleteSession", "description": "Deletes a specified session and updates the local state accordingly."}, {"name": "setActiveSession", "description": "Sets a session as active and loads its messages."}, {"name": "loadMessages", "description": "Fetches messages for a specific session from the API."}, {"name": "sendMessage", "description": "Sends a message in the active session, displaying it optimistically, and updates state with the assistant's reply."}], "calls": ["this.api.listSessions", "this.api.createSession", "this.api.deleteSession", "this.api.listMessages", "this.api.sendMessage"], "search-terms": ["Angular chat state management", "session and message signals", "API interaction for chat", "Reactive chat service"], "state": 2, "file_id": 24, "knowledge_revision": 49, "git_revision": "", "ctags": [{"_type": "tag", "name": "ChatStateService", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/chat-state.service.ts", "pattern": "/^export class ChatStateService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "assistant", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/chat-state.service.ts", "pattern": "/^        const assistant = resp.assistant_message;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/chat-state.service.ts", "pattern": "/^    const payload: SendMessageRequest = { session_id: session.session_id, message: trimmed };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "optimisticUser", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/chat-state.service.ts", "pattern": "/^    const optimisticUser: ChatMessage = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "payload", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/chat-state.service.ts", "pattern": "/^    const payload: SendMessageRequest = { session_id: session.session_id, message: trimmed };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "remaining", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/chat-state.service.ts", "pattern": "/^        const remaining = this.sessions().filter(s => s.session_id !== session.session_id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "session", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/chat-state.service.ts", "pattern": "/^    const session = this.activeSession();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "sessions", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/chat-state.service.ts", "pattern": "/^  sessions = signal<SessionResponse[]>([]);$/", "language": "TypeScript", "kind": "property", "scope": "ChatStateService", "scopeKind": "class"}, {"_type": "tag", "name": "sorted", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/chat-state.service.ts", "pattern": "/^            const sorted = [...s].sort((a, b) => new Date(b.updated_at).getTime() - new Date(a.u/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "timestamp", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/chat-state.service.ts", "pattern": "/^      timestamp: new Date().toISOString(),$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "trimmed", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/chat-state.service.ts", "pattern": "/^    const trimmed = text.trim();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updatedSessions", "path": "/home/kavia/workspace/code-generation/conversational-qa-chatbot-2995-3004/q_a_frontend/src/app/services/chat-state.service.ts", "pattern": "/^        const updatedSessions = this.sessions().map(s =>$/", "language": "TypeScript", "kind": "constant"}], "hash": "4c37bc8fc158a609b1904afb8b865744", "format-version": 4, "code-base-name": "q_a_frontend", "filename": "q_a_frontend/src/app/services/chat-state.service.ts", "fields": [{"name": "sessions = signal<SessionResponse[]>([]);", "scope": "ChatStateService", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"49": ""}]}